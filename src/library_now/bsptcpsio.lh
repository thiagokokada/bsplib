%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%      Copyright (C) 1997 Stephen Donaldson                             %%
%%                      &  The University of Oxford                      %%
%%                                                                       %%
%% Permission to use, copy, modify, and distribute this software,        %%
%% and to incorporate it, in whole or in part, into other software,      %%
%% is hereby granted without fee, provided that                          %%
%%   (1) the above copyright notice and this permission notice appear in %%
%%       all copies of the source code, and the above copyright notice   %%
%%       appear in clearly visible form on all supporting documentation  %%
%%       and distribution media;                                         %%
%%   (2) modified versions of this software be accompanied by a complete %%
%%       change history describing author, date, and modifications made; %%
%%       and                                                             %%
%%   (3) any redistribution of the software, in original or modified     %%
%%       form, be without fee and subject to these same conditions.      %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

This file contains the protoypes of functions sendall(), recvall(), 
readall() and writeall() that guard socket functions send() and recv(), resp.
and IPC/device/file functions read() and write(), resp.	These functions 
have the same parameters as send(), recv(), read() and write().
\begin{code}
extern char bsp_my_hostname[];
int sendall(int s, const char *msg, int len, int flags);
int recvall(int s, char *buf, int len, int flags);
int writeall(int fd, const void *buf, int nbytes);
int readall(int fd,void *buf, int nbytes);
void bspnow_usecsleep(int usecs, struct timeval *now_tv);
\end{code}
