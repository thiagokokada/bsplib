###########################################################################
##      Copyright (C) 1995,1996,1997 University of Oxford                ##
##                                                                       ##
## Permission to use, copy, modify, and distribute this software,        ##
## and to incorporate it, in whole or in part, into other software,      ##
## is hereby granted without fee, provided that                          ##
##   (1) the above copyright notice and this permission notice appear in ##
##       all copies of the source code, and the above copyright notice   ##
##       appear in clearly visible form on all supporting documentation  ##
##       and distribution media;                                         ##
##   (2) modified versions of this software be accompanied by a complete ##
##       change history describing author, date, and modifications made; ##
##       and                                                             ##
##   (3) any redistribution of the software, in original or modified     ##
##       form, be without fee and subject to these same conditions.      ##
###########################################################################

###########################################################################
##            D O N T  C H A N G E  A N Y T H I N G  !!                  ##
###########################################################################

SHELL      = /bin/sh

prefix     = @prefix@
exec_prefix= @exec_prefix@
bindir     = @bindir@
includedir = @includedir@
libdir     = @libdir@
top_srcdir = @top_srcdir@/../

BSP_ONLINE_PROCS= @BSP_ONLINE_PROCS@
RANLIB          = @RANLIB@
GCC             = @GCC@
INSTALL          = @INSTALL@
INSTALL_PROGRAM  = @INSTALL_PROGRAM@
INSTALL_DATA     = @INSTALL_DATA@

mpiincludedir   = @mpiincludedir@

editpl = sed -e 's,@''includedir''@,$(includedir),g'       \
             -e 's,@''bindir''@,$(bindir),g'               \
             -e 's,@''binarchdir''@,$(bindir)/$(ARCH)/,g'  \
             -e 's,@''libdir''@,$(libdir),g'               \
             -e 's,@''mandir''@,$(mandir),g'               \
             -e 's,@''GCC''@,$(GCC),g'                     \
             -e 's,@''G77''@,$(G77),g'                     \
             -e 's,@''GPLUSPLUS''@,$(GPLUSPLUS),g'         \
             -e 's,@''mpiincludedir''@,$(mpiincludedir),g' \
             -e 's,@''mpilibdir''@,$(mpilibdir),g'         \
             -e 's,@''PERL_DBMOK''@,$(PERL_DBMOK),g'       \
             -e 's,@''PERL''@,$(PERL),g'                   \
             -e 's,@''PWD''@,$(PWD),g'

##########################################################################
# Architecture independent modules
##########################################################################
SRCS_LC   = bspudptrace.lc bspudpl.lc
NOW_O     = ../library_now/bsptcpsio.o ../library_now/bsploadfuns.o

SRCS_LH   = bspudpl.lh bspqueue.lh bspqueueops.lh bspudpdefs.lh \
            bspudptrace.lh bspsocketio.lh

.SUFFIXES: .lc .lh .c .tex .c.tex .h.tex .s

#############################################################
##             Flags and conversions                       ##
#############################################################

LIBRARIES     = @SOCKET_LIBRARY@ @NSL_LIBRARY@
INCLUDES      = 

SRCS_O        = $(SRCS_LC:.lc=.o) 

SRCS_C        = $(SRCS_LC:.lc=.c)

SRCS_H        = $(SRCS_LH:.lh=.h)

SRCS_TEX      = $(SRCS_LH:.lh=.h.tex) $(SRCS_LC:.lc=.c.tex)

CC         = cc
YACC       = @YACC@
LEX        = @LEX@
CFLAGS     =  ${BUILD_DEFINES}  ${BUILD_EXTRAS}
LIBNAME    = "libbspudpip"

.SUFFIXES: .lc .lh .h .c .tex .c.tex .h.tex

#############################################################
##             Compilation rules                           ##
#############################################################


.lh.h:
	rm -f $*.h $*.tmp;				\
	litToPgm $<;					\
	$(editpl) $*.h > $*.tmp && mv $*.tmp $*.h


.lc.o:
	rm -f $*.c $*.tmp;				\
	litToPgm $<;					\
	$(editpl) $*.c > $*.tmp && mv $*.tmp $*.c;	\
	${CC} ${CFLAGS} $(INCLUDES) -c $*.c 

.lc.c:
	litToPgm $<;					\
	rm -f $*.tmp;					\
	$(editpl) $*.c > $*.tmp && mv $*.tmp $*.c

.y.c:
	${YACC} $<

.l.c:
	${LEX} -t $< > $*.c

.c.o:
	${CC} ${CFLAGS} $(INCLUDES) -c $*.c 

.lh.h.tex:
	litToTex $<

.lc.c.tex:
	litToTex $<



#############################################################
##             Main Targets                                ##
#############################################################

all::	

sample: 
	@make machine;					\
	litToPgm sample.lc;				\
	${CC} -DBSPTCP_SETENV sample.c bsptcpl.o -o sample -lnsl -lsocket;\
        rm -f sample.c

massdata: bsptcpl.h massdata.o
	@make machine;					\
	litToPgm massdata.lc;				\
	${CC} -DBSPTCP_SETENV massdata.o bsptcpl.o -o massdata -lnsl -lsocket;\
        rm -f massdata.c


build:
	@$(MAKE) clean; $(MAKE) device 

develop:
	@$(MAKE) device

#############################################################
##             Machine Targets                             ##
#############################################################
device:
	@case `bsparch -device` in					   \
	MPASS_UDPIP)							   \
		$(MAKE) banner TYPE="device" 				   \
		        FOR="UDP/IP message passing";			   \
		$(MAKE) machine						   \
			LIBNAME="libbspudpip"				   \
			BUILD_DEFINES="${BUILD_DEFINES}";;		   \
									   \
	MPASS_3C905B)							   \
		$(MAKE) banner TYPE="device" 				   \
		        FOR="UDP/IP with 3Com 3C906B kernel module";	   \
		$(MAKE) machine						   \
			LIBNAME="libbspudpip3c905b"			   \
			BUILD_DEFINES="-DMPASS_3C905B		           \
                                       ${BUILD_DEFINES}";;		   \
									   \
	*)	echo "Error building UDP/IP for a `bsparch -device`";	   \
		exit 1;;						   \
	esac

machine:
	@case `bsparch -arch` in					   \
	SGICHALL64) 							   \
		$(MAKE) banner TYPE="machine" FOR="SGI PowerChallenge";    \
                $(MAKE) lib 	                  	                   \
                     BUILD_DEFINES="-DBSPTCP_SETENV                        \
                                    -D__INLINE_INTRINSICS     		   \
                                    -xansi -64 -mips4                      \
                                    -GCM:pointer_speculation=ON            \
                                    -GCM:static_load_speculation=ON        \
                                    -O3 -DSGICHALL64 ${BUILD_DEFINES}"     \
		     LIBNAME="${LIBNAME}"				   \
 		     ARCH="SGICHALL64"					   \
                     AR=ar                                                 \
                     CC=cc;;                                               \
                                                                           \
	RS6000) $(MAKE) banner TYPE="machine" FOR="IBM RS6000";            \
                $(MAKE) lib	                     		           \
                     BUILD_DEFINES="-O2 -DRS6000 -DBSPTCP_OSAIX 	   \
				    -DBSPTCP_SETENV ${BUILD_DEFINES}"      \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="RS6000"					   \
                     AR=ar                                                 \
                     CC=cc;;                                               \
                                                                           \
	OSF1)   $(MAKE) banner TYPE="machine" FOR="Digital Alpha";         \
                $(MAKE) lib	                    		           \
                     BUILD_DEFINES="-O5 -migrate -DOSF1 ${BUILD_DEFINES}"  \
		     LIBNAME="${LIBNAME}"				   \
 		     ARCH="OSF1"					   \
                     AR=ar                                                 \
                     CC=cc;;                                               \
                                                                           \
	SGI) 							           \
		$(MAKE) banner TYPE="machine" FOR="Uniprocessor SGI";      \
                $(MAKE) lib 	                  	                   \
                     BUILD_DEFINES="-DSGI -O2 -DBSPTCP_SETENV              \
                                    ${BUILD_DEFINES}"                      \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="SGI"					           \
                     AR=@AR@                                               \
                     CC=cc;;                                               \
                                                                           \
	SGIN32) 						           \
		$(MAKE) banner TYPE="machine" FOR="Uniprocessor SGI";      \
                $(MAKE) lib 	                                           \
                     BUILD_DEFINES="-DSGI -O2 -n32 -DBSPTCP_SETENV         \
			            ${BUILD_DEFINES}"                      \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="SGI"					           \
                     AR=@AR@                                               \
                     CC=cc;;                                               \
                                                                           \
	SunOS)  $(MAKE) banner TYPE="machine" FOR="SunOs";                 \
                if test -n "${GCC}"; then                                  \
                  $(MAKE) lib	           	                   	   \
                     BUILD_DEFINES="-ansi -DSunOS -O2 ${BUILD_DEFINES}"	   \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="SunOS"					   \
                     AR=@AR@                                               \
                     CC=gcc;                                               \
                else                                                       \
                   $(MAKE) lib	          		                   \
                     BUILD_DEFINES="-DSunOS -O2 ${BUILD_DEFINES}"          \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="SunOS"					   \
                     AR=@AR@                                               \
                     CC=cc;                                                \
                fi;;                                                       \
                                                                           \
	Solaris)                                                           \
                $(MAKE) banner TYPE="machine" FOR="Sun Solaris";           \
                if test -n "${GCC}"; then                                  \
                  $(MAKE) lib	              	                	   \
                     BUILD_DEFINES=" -DBSPTCP_SETENV -DSolaris -O2         \
                                    ${BUILD_DEFINES}"                      \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="Solaris"					   \
                     AR=@AR@                                               \
                     CC=gcc;                                               \
                else                                                       \
                  $(MAKE) lib	              	                	   \
                     BUILD_DEFINES="-DBSPTCP_SETENV -DSolaris -fast -xO4"  \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="Solaris"					   \
                     AR=@AR@                                               \
                     CC=cc;                                                \
                fi;;                                                       \
                                                                           \
	SolarisX86)                                                        \
                $(MAKE) banner TYPE="machine" FOR="Intel Solaris";         \
                if test -n "${GCC}"; then                                  \
                  $(MAKE) lib	              	                	   \
                     BUILD_DEFINES=" -DBSPTCP_SETENV -DSolarisX86 -O2      \
				     ${BUILD_DEFINES}"                     \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="SolarisX86"					   \
                     AR=@AR@                                               \
                     CC=gcc;                                               \
                else                                                       \
                  $(MAKE) lib	              	                	   \
                     BUILD_DEFINES="-DBSPTCP_SETENV -DSolarisX86           \
                                    -fast -xO4 ${BUILD_DEFINES}"           \
		     ARCH="SolarisX86"					   \
                     AR=@AR@                                               \
                     CC=cc;                                                \
                fi;;                                                       \
                                                                           \
        LINUX)  $(MAKE) banner TYPE="machine" FOR="Linux";                 \
                $(MAKE) lib                       	                   \
                     BUILD_DEFINES="-ansi -DLINUX -D_I386_BITOPS_H -O2     \
				    -D_GNU_SOURCE ${BUILD_DEFINES}"        \
		     LIBNAME="${LIBNAME}"				   \
		     ARCH="LINUX"					   \
                     AR=ar                                                 \
                     CC=gcc;;                                              \
                                                                           \
        *)      echo "I dont know how to BUILD for a `bsparch -arch`";     \
                exit 1;;						   \
        esac

#############################################################
##             Generic Compilation targets                 ##
#############################################################

objects: ${SRCS_H} ${SRCS_O}

delit: ${SRCS_C} ${SRCS_H} 

root.dvi: $(SRCS_TEX)
	latex root.tex

lib:
	@$(MAKE) banner TYPE="library prefix "     			 \
              FOR="\"${LIBNAME}\"; flags are $(CFLAGS)";                 \
	if [ ! -d ${top_srcdir}/lib/`bsparch -arch` ] ;                  \
        then  mkdir -p ${top_srcdir}/lib/`bsparch -arch`; fi;            \
	rm -f ${top_srcdir}/lib/`bsparch -arch`/${LIBNAME}.a;            \
	$(MAKE) objects SRCS_LC="${SRCS_LC}" SRCS_LH="${SRCS_LH}"        \
                        SRCS_O="${SRCS_O}" CFLAGS="${CFLAGS} @DEFS@"     \
                        CC="${CC}";                                      \
	${AR} crv ${top_srcdir}/lib/`bsparch -arch`/${LIBNAME}.a         \
                  $(SRCS_O) $(NOW_O);                                    \
        ${RANLIB} ${top_srcdir}/lib/`bsparch -arch`/${LIBNAME}.a

            

clean:
	rm -f $(SRCS_O) $(SRCS_ANY_O) $(BINARY_TARGET)   \
              $(SRCS_H) $(SRCS_TEX) mon.out $(SRCS_C)    \
	      y.tab.c bsptcpd bsptcps bsptcpm bspportd bsploadd bspshutd

banner:
	@echo "#########################################################"; \
        echo  "#####   ${TYPE} = ${FOR}";                                  \
        echo  "#########################################################"


#############################################################
##             Dependencies                                ##
#############################################################

bspudpl.o: bspudpl.lc bspudpl.h bspudpdefs.h
